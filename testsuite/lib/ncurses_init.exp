#
# run a ncurses file
#
proc ncurses-run { src } {

  set path [split $src "/"]
  set filename [lindex $path [expr [llength $path]-1]]

  # extract basename and check extension

  set fname [split $filename "."]

  if {[llength $fname] < 2} {
    fail "Bad filename syntax '$src'"
    return
  }
  if {[lindex $fname [expr [llength $fname]-1]] != "ycp"} {
    fail "Not .ycp extension '$src'"
    return
  }

  # setup filenames

  set base_name [lindex $fname 0]

  set stdout_name "tests/$base_name.out"
  set tmp_name    "tmp.qt.out.$base_name"

  # due to a change of _debug() the stderr will be redirected to a log
  # set stderr_name "tests/$base_name.err"

  # run the test for QT

  set result [exec "cat" "$src" "|" "../src/y2ncurses" "stdio" ">" "$tmp_name"]

  # check return code

  if {$result != ""} {
    warning "Compilation of $base_name results in '$result'"
  }

  # check stdout

  if {[diff $stdout_name $tmp_name] != 1} {
    fail "Wrong stdout for $base_name"
  }

  # check stderr  -- no longer needed 


 
  # set stdout_name "tests/$base_name.out"
  # set tmp_name    "tmp.ncurses.out.$base_name"

  # # run the test for ncurses

  # # set result [exec "cat $src | ../ncurses/ncurses stdio > $tmp_name"]
  # set result [exec "cat" "$src" "|" "../ncurses/ncurses" "stdio" ">" "$tmp_name"]

  # # check return code

  # if {$result != ""} {
  #   warning "Compilation of $base_name results in '$result'"
  # }

  # # check stdout

  # if {[diff $stdout_name $tmp_name] != 1} {
  #   fail "Wrong stdout for $base_name"
  # }
 


  # ok, all is fine

  pass $base_name
}
